version: '3.7'
services:
  broker:
    image: confluentinc/cp-kafka:7.5.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    healthcheck:
      test: ["CMD-SHELL", "echo 'test-message' | kafka-console-producer --bootstrap-server localhost:9092 --topic health-check-topic && kafka-console-consumer --bootstrap-server localhost:9092 --topic health-check-topic --from-beginning --max-messages 1 | grep 'test-message'"]
      interval: 15s
      timeout: 10s
      retries: 10
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: 'broker:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid" 
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: '41PmKs1mQiGJK0U_Ul45OA'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  producer:
    build: ./producer
    depends_on:
      - broker
    environment:
      KAFKA_BROKER: broker:29092


  flink-jobmanager:
    build: .
    command: jobmanager
    ports:
      - "8081:8081"
      - "9069:9069"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        queryable-state.enable: true
    volumes:
      - ./flink-job/target:/opt/flink/usrlib

  flink-taskmanager:
    build: .
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        queryable-state.enable: true

    depends_on:
      - flink-jobmanager

  submit:
    image: flink:1.19.1
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
      - producer
    entrypoint: [ "/bin/sh", "-c", "flink run --jobmanager flink-jobmanager:8081 -d -c com.platformatory.KafkaFlinkJob /opt/flink/usrlib/flink-job-1.0-SNAPSHOT.jar" ]
    volumes:
      - ./flink-job/target:/opt/flink/usrlib

  query-client:
    build: state-query-client
    ports:
      - "8080:8080"
    entrypoint: ["java", "-cp", "FlinkStateQueryClient-1.0-SNAPSHOT.jar", "com.platformatory.RestServer", "flink-taskmanager", "9069", "flinkJobID", "8080"]
    depends_on:
      - flink-taskmanager
